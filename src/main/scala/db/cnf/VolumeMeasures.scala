package db.cnf

import base.Floating
import physical.{Litre, Milli, NamedUnit, PhysicalAmount}
import physical.Prefix.Syntax._

object VolumeMeasures {

  private def fromRelative(relative: Floating) = PhysicalAmount.fromRelative[Floating, Milli](relative)

  private val amountsByName: Map[String, Floating] = Map(
    "1 bar (75 ml)" -> 75,
    "1 beet (5 cm dia)" -> 65.45,
    "1 can (284 ml)" -> 284,
    "1 can (355 ml)" -> 355,
    "1 drink box (250ml)" -> 250,
    "1 egg (60ml)" -> 60,
    "1 large fruit (6 cm dia)" -> 113.1,
    "1 pop (75ml)" -> 75,
    "1 potato (6.3cm dia)" -> 130.92,
    "100ml" -> 100,
    "100ml chips" -> 100,
    "100ml chopped" -> 100,
    "100ml crumbled" -> 100,
    "100ml crumbs" -> 100,
    "100ml crushed" -> 100,
    "100ml cubes" -> 100,
    "100ml diced" -> 100,
    "100ml drained" -> 100,
    "100ml elbows" -> 100,
    "100ml flaked" -> 100,
    "100ml giblets" -> 100,
    "100ml grated" -> 100,
    "100ml halves" -> 100,
    "100ml large curd" -> 100,
    "100ml mashed" -> 100,
    "100ml melted" -> 100,
    "100ml mini" -> 100,
    "100ml nuts" -> 100,
    "100ml nuts (40)" -> 100,
    "100ml packed" -> 100,
    "100ml pieces" -> 100,
    "100ml pitted" -> 100,
    "100ml poured" -> 100,
    "100ml pulp" -> 100,
    "100ml puree" -> 100,
    "100ml shredded" -> 100,
    "100ml shredded, packed" -> 100,
    "100ml sifted" -> 100,
    "100ml slices" -> 100,
    "100ml stirred" -> 100,
    "100ml unpacked" -> 100,
    "100ml unsifted" -> 100,
    "100ml whipped" -> 100,
    "100ml whole" -> 100,
    "125ml" -> 125,
    "15ml" -> 15,
    "15ml bits" -> 15,
    "15ml chopped" -> 15,
    "150ml" -> 150,
    "175ml" -> 175,
    "2 tablespoons" -> 30,
    "200ml" -> 200,
    "225ml" -> 225,
    "250ml" -> 250,
    "250ml water + powder" -> 250,
    "30ml" -> 30,
    "300ml" -> 300,
    "5ml" -> 5,
    "5ml chopped" -> 5,
    "1 bottle (341ml)" -> 341,
    "1 container (355ml)" -> 355,
    "100ml ground" -> 100,
    "100ml hearts" -> 100,
    "100ml hulled" -> 100,
    "100ml not pitted" -> 100,
    "100ml sections" -> 100,
    "100ml shredded, not packed" -> 100,
    "100ml small curd" -> 100,
    "100ml spirals" -> 100,
    "50ml" -> 50,
    "60ml" -> 60,
    "75ml" -> 75,
    "45ml" -> 45,
    "80ml" -> 80,
    "250ml, crushed" -> 250,
    "100ml crushed, diced or chunks" -> 100,
    "15ml drained" -> 15,
    "5ml, ground" -> 5,
    "15ml, ground" -> 15,
    "5ml, leaves" -> 5,
    "15ml, leaves" -> 15,
    "1 pat (2.54cm x 2.54cm x 0.85cm)" -> 5.48,
    "125ml diced" -> 125,
    "125ml shredded" -> 125,
    "125ml slices" -> 125,
    "125ml large curd" -> 125,
    "125ml small curd" -> 125,
    "125ml unpacked" -> 125,
    "250ml crumbled" -> 250,
    "250ml diced" -> 250,
    "250ml shredded" -> 250,
    "250ml melted" -> 250,
    "250ml slices" -> 250,
    "250ml large curd" -> 250,
    "250ml small curd" -> 250,
    "250ml unpacked" -> 250,
    "250ml, sifted" -> 250,
    "15ml, sifted" -> 15,
    "250ml, chopped" -> 250,
    "250ml, diced" -> 250,
    "250ml, shredded" -> 250,
    "250ml, melted" -> 250,
    "250ml, crumbled" -> 250,
    "250ml whipped" -> 250,
    "250ml fluid (yields 2 cups whipped)" -> 250,
    "5ml crumbled" -> 5,
    "15ml crumbled" -> 15,
    "250ml sprigs" -> 250,
    "100ml sprigs" -> 100,
    "125ml halves" -> 125,
    "250ml halves" -> 250,
    "125ml whole" -> 125,
    "250ml whole" -> 250,
    "125ml puree" -> 125,
    "250ml puree" -> 250,
    "125ml cubes" -> 125,
    "250ml cubes" -> 250,
    "125ml frozen" -> 125,
    "250ml frozen" -> 250,
    "100ml frozen" -> 100,
    "125ml thawed" -> 125,
    "250ml thawed" -> 250,
    "100ml thawed" -> 100,
    "125ml pitted" -> 125,
    "250ml not pitted" -> 250,
    "250ml pitted" -> 250,
    "125ml not pitted" -> 125,
    "125ml chopped" -> 125,
    "250ml chopped" -> 250,
    "125ml sections" -> 125,
    "250ml sections" -> 250,
    "100ml balls" -> 100,
    "125ml balls" -> 125,
    "250ml balls" -> 250,
    "125ml mashed" -> 125,
    "250ml mashed" -> 250,
    "100ml halves or slices" -> 100,
    "125ml halves or slices" -> 125,
    "250ml halves or slices" -> 250,
    "75ml halves" -> 75,
    "100ml chunks" -> 100,
    "125ml chunks" -> 125,
    "250ml chunks" -> 250,
    "125ml pulp" -> 125,
    "250ml pulp" -> 250,
    "100ml pitted, chopped" -> 100,
    "125ml pitted, chopped" -> 125,
    "250ml pitted, chopped" -> 250,
    "100ml seedless" -> 100,
    "125ml seedless" -> 125,
    "250ml seedless" -> 250,
    "125ml drained" -> 125,
    "250ml drained" -> 250,
    "100ml chopped or diced" -> 100,
    "125ml chopped or diced" -> 125,
    "250ml chopped or diced" -> 250,
    "125ml packed" -> 125,
    "250ml packed" -> 250,
    "75ml pitted" -> 75,
    "125ml crushed, diced or chunks" -> 125,
    "250ml crushed, diced or chunks" -> 250,
    "125ml pieces" -> 125,
    "250ml pieces" -> 250,
    "125ml shredded or chopped" -> 125,
    "250ml shredded or chopped" -> 250,
    "100ml shredded or chopped" -> 100,
    "100ml undrained" -> 100,
    "125ml undrained" -> 125,
    "250ml undrained" -> 250,
    "125ml hearts" -> 125,
    "250ml hearts" -> 250,
    "125ml grated" -> 125,
    "250ml grated" -> 250,
    "100ml strips" -> 100,
    "125ml strips" -> 125,
    "250ml strips" -> 250,
    "100ml chopped or sliced" -> 100,
    "125ml chopped or sliced" -> 125,
    "250ml chopped or sliced" -> 250,
    "100ml cherry totatoes" -> 100,
    "125ml cherry tomatoes" -> 125,
    "250ml cherry tomatoes" -> 250,
    "60ml hulled" -> 60,
    "125ml hulled" -> 125,
    "60ml ground" -> 60,
    "125ml ground" -> 125,
    "60ml slices" -> 60,
    "60ml whole" -> 60,
    "100ml slivered" -> 100,
    "60ml slivered" -> 60,
    "125ml slivered" -> 125,
    "30ml packed" -> 30,
    "60ml packed" -> 60,
    "100ml whole or halves" -> 100,
    "60ml whole or halves" -> 60,
    "125ml whole or halves" -> 125,
    "125ml shredded, not packed" -> 125,
    "125ml shredded, packed" -> 125,
    "60ml chopped" -> 60,
    "60ml halves" -> 60,
    "60ml pieces" -> 60,
    "100ml halves or whole" -> 100,
    "60ml halves or whole" -> 60,
    "125ml halves or whole" -> 125,
    "125ml regular" -> 125,
    "250ml regular" -> 250,
    "100ml regular" -> 100,
    "100ml ripple, ruffle or crinkle cut" -> 100,
    "125ml ripple, ruffle or crinkle cut" -> 125,
    "250ml ripple, ruffle or crinkle cut" -> 250,
    "250ml unsifted" -> 250,
    "250ml elbows" -> 250,
    "250ml spirals" -> 250,
    "125ml elbows" -> 125,
    "125ml spirals" -> 125,
    "20ml" -> 20,
    "10ml" -> 10,
    "500ml" -> 500,
    "1 bottle (330ml)" -> 330,
    "1 bottle (750ml)" -> 750,
    "40ml" -> 40,
    "100ml purchased" -> 100,
    "250ml purchased" -> 250,
    "250ml crumbs" -> 250,
    "250ml poured" -> 250,
    "250ml stirred" -> 250,
    "240ml" -> 240,
    "125ml giblets" -> 125,
    "250ml giblets" -> 250,
    "250ml crushed" -> 250,
    "1 piece (9.5cm x 4.4cm x .13cm dia)" -> 5.434,
    "125ml chips" -> 125,
    "250ml chips" -> 250,
    "125ml sifted" -> 125,
    "125ml unsifted" -> 125,
    "60ml unpacked" -> 60,
    "200ml pieces" -> 200,
    "100ml shaved" -> 100,
    "250ml shaved" -> 250,
    "355ml" -> 355,
    "130ml" -> 130,
    "90ml" -> 90,
    "105ml" -> 105,
    "35ml" -> 35,
    "125ml crushed" -> 125,
    "15ml ground" -> 15,
    "60ml shredded, not packed" -> 60,
    "60ml shredded" -> 60,
    "100ml flowerets" -> 100,
    "125ml flowerets" -> 125,
    "250ml flowerets" -> 250,
    "125ml flaked" -> 125,
    "250ml flakes" -> 250,
    "1 fillet (16cm x 9cm x 1cm)" -> 144,
    "60ml crumbs" -> 60,
    "125ml crumbs" -> 125,
    "1 can (250ml)" -> 250,
    "1 can (473ml)" -> 473,
    "1 can (650 ml)" -> 650,
    "1 can (444 ml)" -> 444,
    "1 bottle (60ml)" -> 60,
    "100ml seeds/ arils" -> 100,
    "125ml seeds / arils" -> 125,
    "250ml seeds / arils" -> 250,
    "60ml seeds / arils" -> 60,
    "15ml whole" -> 15,
    "30ml ground" -> 30,
    "1 can (569ml)" -> 569,
    "5 ml ground" -> 5,
    "5ml whole" -> 5,
    "1 bottle (591 ml)" -> 591
  )

  val volumesByName: Map[String, PhysicalAmount[Floating, Milli]] = amountsByName.mapValues(fromRelative)

  def findByName(name: String): Option[NamedUnit[Floating, Milli, Litre]] =
    volumesByName.get(name).map(NamedUnit.litre[Floating, Milli])

}
